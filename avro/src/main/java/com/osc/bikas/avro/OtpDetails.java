/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.osc.bikas.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class OtpDetails extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1553286956759861736L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OtpDetails\",\"namespace\":\"com.osc.bikas.avro\",\"fields\":[{\"name\":\"otp\",\"type\":\"int\"},{\"name\":\"attempts\",\"type\":\"int\",\"default\":0},{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"format\",\"type\":{\"type\":\"enum\",\"name\":\"Format\",\"symbols\":[\"REGISTRATION\",\"FORGOT_PASSWORD\"]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<OtpDetails> ENCODER =
      new BinaryMessageEncoder<OtpDetails>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<OtpDetails> DECODER =
      new BinaryMessageDecoder<OtpDetails>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<OtpDetails> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<OtpDetails> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<OtpDetails> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<OtpDetails>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this OtpDetails to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a OtpDetails from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a OtpDetails instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static OtpDetails fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private int otp;
   private int attempts;
   private java.lang.CharSequence email;
   private com.osc.bikas.avro.Format format;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public OtpDetails() {}

  /**
   * All-args constructor.
   * @param otp The new value for otp
   * @param attempts The new value for attempts
   * @param email The new value for email
   * @param format The new value for format
   */
  public OtpDetails(java.lang.Integer otp, java.lang.Integer attempts, java.lang.CharSequence email, com.osc.bikas.avro.Format format) {
    this.otp = otp;
    this.attempts = attempts;
    this.email = email;
    this.format = format;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return otp;
    case 1: return attempts;
    case 2: return email;
    case 3: return format;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: otp = (java.lang.Integer)value$; break;
    case 1: attempts = (java.lang.Integer)value$; break;
    case 2: email = (java.lang.CharSequence)value$; break;
    case 3: format = (com.osc.bikas.avro.Format)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'otp' field.
   * @return The value of the 'otp' field.
   */
  public int getOtp() {
    return otp;
  }


  /**
   * Sets the value of the 'otp' field.
   * @param value the value to set.
   */
  public void setOtp(int value) {
    this.otp = value;
  }

  /**
   * Gets the value of the 'attempts' field.
   * @return The value of the 'attempts' field.
   */
  public int getAttempts() {
    return attempts;
  }


  /**
   * Sets the value of the 'attempts' field.
   * @param value the value to set.
   */
  public void setAttempts(int value) {
    this.attempts = value;
  }

  /**
   * Gets the value of the 'email' field.
   * @return The value of the 'email' field.
   */
  public java.lang.CharSequence getEmail() {
    return email;
  }


  /**
   * Sets the value of the 'email' field.
   * @param value the value to set.
   */
  public void setEmail(java.lang.CharSequence value) {
    this.email = value;
  }

  /**
   * Gets the value of the 'format' field.
   * @return The value of the 'format' field.
   */
  public com.osc.bikas.avro.Format getFormat() {
    return format;
  }


  /**
   * Sets the value of the 'format' field.
   * @param value the value to set.
   */
  public void setFormat(com.osc.bikas.avro.Format value) {
    this.format = value;
  }

  /**
   * Creates a new OtpDetails RecordBuilder.
   * @return A new OtpDetails RecordBuilder
   */
  public static com.osc.bikas.avro.OtpDetails.Builder newBuilder() {
    return new com.osc.bikas.avro.OtpDetails.Builder();
  }

  /**
   * Creates a new OtpDetails RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new OtpDetails RecordBuilder
   */
  public static com.osc.bikas.avro.OtpDetails.Builder newBuilder(com.osc.bikas.avro.OtpDetails.Builder other) {
    if (other == null) {
      return new com.osc.bikas.avro.OtpDetails.Builder();
    } else {
      return new com.osc.bikas.avro.OtpDetails.Builder(other);
    }
  }

  /**
   * Creates a new OtpDetails RecordBuilder by copying an existing OtpDetails instance.
   * @param other The existing instance to copy.
   * @return A new OtpDetails RecordBuilder
   */
  public static com.osc.bikas.avro.OtpDetails.Builder newBuilder(com.osc.bikas.avro.OtpDetails other) {
    if (other == null) {
      return new com.osc.bikas.avro.OtpDetails.Builder();
    } else {
      return new com.osc.bikas.avro.OtpDetails.Builder(other);
    }
  }

  /**
   * RecordBuilder for OtpDetails instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OtpDetails>
    implements org.apache.avro.data.RecordBuilder<OtpDetails> {

    private int otp;
    private int attempts;
    private java.lang.CharSequence email;
    private com.osc.bikas.avro.Format format;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.osc.bikas.avro.OtpDetails.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.otp)) {
        this.otp = data().deepCopy(fields()[0].schema(), other.otp);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.attempts)) {
        this.attempts = data().deepCopy(fields()[1].schema(), other.attempts);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.email)) {
        this.email = data().deepCopy(fields()[2].schema(), other.email);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.format)) {
        this.format = data().deepCopy(fields()[3].schema(), other.format);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing OtpDetails instance
     * @param other The existing instance to copy.
     */
    private Builder(com.osc.bikas.avro.OtpDetails other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.otp)) {
        this.otp = data().deepCopy(fields()[0].schema(), other.otp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.attempts)) {
        this.attempts = data().deepCopy(fields()[1].schema(), other.attempts);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.email)) {
        this.email = data().deepCopy(fields()[2].schema(), other.email);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.format)) {
        this.format = data().deepCopy(fields()[3].schema(), other.format);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'otp' field.
      * @return The value.
      */
    public int getOtp() {
      return otp;
    }


    /**
      * Sets the value of the 'otp' field.
      * @param value The value of 'otp'.
      * @return This builder.
      */
    public com.osc.bikas.avro.OtpDetails.Builder setOtp(int value) {
      validate(fields()[0], value);
      this.otp = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'otp' field has been set.
      * @return True if the 'otp' field has been set, false otherwise.
      */
    public boolean hasOtp() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'otp' field.
      * @return This builder.
      */
    public com.osc.bikas.avro.OtpDetails.Builder clearOtp() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'attempts' field.
      * @return The value.
      */
    public int getAttempts() {
      return attempts;
    }


    /**
      * Sets the value of the 'attempts' field.
      * @param value The value of 'attempts'.
      * @return This builder.
      */
    public com.osc.bikas.avro.OtpDetails.Builder setAttempts(int value) {
      validate(fields()[1], value);
      this.attempts = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'attempts' field has been set.
      * @return True if the 'attempts' field has been set, false otherwise.
      */
    public boolean hasAttempts() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'attempts' field.
      * @return This builder.
      */
    public com.osc.bikas.avro.OtpDetails.Builder clearAttempts() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'email' field.
      * @return The value.
      */
    public java.lang.CharSequence getEmail() {
      return email;
    }


    /**
      * Sets the value of the 'email' field.
      * @param value The value of 'email'.
      * @return This builder.
      */
    public com.osc.bikas.avro.OtpDetails.Builder setEmail(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.email = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'email' field has been set.
      * @return True if the 'email' field has been set, false otherwise.
      */
    public boolean hasEmail() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'email' field.
      * @return This builder.
      */
    public com.osc.bikas.avro.OtpDetails.Builder clearEmail() {
      email = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'format' field.
      * @return The value.
      */
    public com.osc.bikas.avro.Format getFormat() {
      return format;
    }


    /**
      * Sets the value of the 'format' field.
      * @param value The value of 'format'.
      * @return This builder.
      */
    public com.osc.bikas.avro.OtpDetails.Builder setFormat(com.osc.bikas.avro.Format value) {
      validate(fields()[3], value);
      this.format = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'format' field has been set.
      * @return True if the 'format' field has been set, false otherwise.
      */
    public boolean hasFormat() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'format' field.
      * @return This builder.
      */
    public com.osc.bikas.avro.OtpDetails.Builder clearFormat() {
      format = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public OtpDetails build() {
      try {
        OtpDetails record = new OtpDetails();
        record.otp = fieldSetFlags()[0] ? this.otp : (java.lang.Integer) defaultValue(fields()[0]);
        record.attempts = fieldSetFlags()[1] ? this.attempts : (java.lang.Integer) defaultValue(fields()[1]);
        record.email = fieldSetFlags()[2] ? this.email : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.format = fieldSetFlags()[3] ? this.format : (com.osc.bikas.avro.Format) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<OtpDetails>
    WRITER$ = (org.apache.avro.io.DatumWriter<OtpDetails>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<OtpDetails>
    READER$ = (org.apache.avro.io.DatumReader<OtpDetails>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeInt(this.otp);

    out.writeInt(this.attempts);

    out.writeString(this.email);

    out.writeEnum(this.format.ordinal());

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.otp = in.readInt();

      this.attempts = in.readInt();

      this.email = in.readString(this.email instanceof Utf8 ? (Utf8)this.email : null);

      this.format = com.osc.bikas.avro.Format.values()[in.readEnum()];

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.otp = in.readInt();
          break;

        case 1:
          this.attempts = in.readInt();
          break;

        case 2:
          this.email = in.readString(this.email instanceof Utf8 ? (Utf8)this.email : null);
          break;

        case 3:
          this.format = com.osc.bikas.avro.Format.values()[in.readEnum()];
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










